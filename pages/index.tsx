import Head from 'next/head'
import Image from 'next/image'
// import { useTokenStore } from '';
// import { useTokenStore } from '../utils/useUserStore';
import { AppProps } from 'next/app';
import { InferGetStaticPropsType } from 'next';
import { useRouter } from 'next/dist/client/router';
import { useEffect } from 'react';
import Header from './../src/components/Header/Header';
import { useSession } from 'next-auth/client';
import { useUserStore } from './../utils/useUserStore';
import { SignButton } from '@/components/SignButton/SignButton';
import Link from 'next/link';


export default function Home(data: any) {
  // console.log("%c 💆‍♂️: Home -> data ",
  //   "font-size:16px;background-color:#f9e161;color:black;",
  //   data)
  // const router = useRouter()

  // const token =
  //   useTokenStore((state) => state.token);
  // const setTokenInStore =
  //   useTokenStore((state) => state.setToken);
  // const signOut = (event: React.MouseEvent<HTMLElement>) => {
  //   setTokenInStore('')
  //   // router.push('/auth/sign-in')
  // }

  // const [session, loading] = useSession();
  const user =
    useUserStore((state) => state.user);
  // console.log("%c 🇫🇷: Home -> user ", "font-size:16px;background-color:#73ca34;color:white;", user)

  useEffect(() => {
    // if (router && token === '')
    //   router.push('/auth/sign-in')
    // else {
    //   const client = new ApolloClient({
    //     uri: API_URL,
    //     cache: new InMemoryCache(),
    //   })
    // }
    return () => {

    }
  }, [])

  return (

    <div  >

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Header /> */}
      <main >        {user ? <div>
        <img
          width={100}
          src={user.picture} alt="" />
        <h1  >
          {`Hello, ${user.name}!`}
        </h1>
        <Link
          href='/repositories/'
        >
          <a >Browse repositories</a>
        </Link>
      </div>
        : <h1  >
          Hello, user! Please sign-in to browse.
        </h1>

      }
        <SignButton />
        {/* <h1>{token || 'No token set.'}</h1> */}
        {/* {
          token && <>
            <p>Welcome back!</p>
            <button
              onClick={() => router.push('/repositories')}

            >Browse repositories</button>
            <button type="reset"
              onClick={signOut}
            >Sign Out</button>
          </>
        }
        {
          !token && <>
            <p>Greetings! Start using explorer by logging in!</p>
            <button
              onClick={() => router.push('/auth/sign-in')}

            >Sign-in</button>
          </>
        } */}

      </main>
      <footer  >

      </footer>
    </div>
  )
}

// export async function getStaticProps() {
//   const res = await fetch(API_URL)
//   const posts: String = await res.json()

//   return {
//     props: {
//       posts,
//     },
//   }
// }