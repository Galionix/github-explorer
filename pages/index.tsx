import Head from 'next/head'
import Image from 'next/image'
// import { useTokenStore } from '';
import { useTokenStore } from './../utils/useTokenStore';
import { AppProps } from 'next/app';
import { InferGetStaticPropsType } from 'next';
import { useRouter } from 'next/dist/client/router';
import { useEffect } from 'react';
import Header from './../src/components/Header/Header';


export default function Home(data: any) {
  console.log("%c 💆‍♂️: Home -> data ",
    "font-size:16px;background-color:#f9e161;color:black;",
    data)
  const router = useRouter()

  const token =
    useTokenStore((state) => state.token);
  const setTokenInStore =
    useTokenStore((state) => state.setToken);
  const signOut = (event: React.MouseEvent<HTMLElement>) => {
    setTokenInStore('')
    // router.push('/auth/sign-in')
  }


  useEffect(() => {
    // if (router && token === '')
    //   router.push('/auth/sign-in')
    // else {
    //   const client = new ApolloClient({
    //     uri: API_URL,
    //     cache: new InMemoryCache(),
    //   })
    // }
    return () => {

    }
  }, [])

  return (

    <div  >

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main  >
        <h1  >
          Hello, user! Welcome to github-explorer!
        </h1>
        {/* <h1>{token || 'No token set.'}</h1> */}
        {
          token && <>
            <p>Welcome back!</p>
            <button
              onClick={() => router.push('/repositories')}

            >Browse repositories</button>
            <button type="reset"
              onClick={signOut}
            >Sign Out</button>
          </>
        }
        {
          !token && <>
            <p>Greetings! Start using explorer by logging in!</p>
            <button
              onClick={() => router.push('/auth/sign-in')}

            >Sign-in</button>
          </>
        }

      </main>
      <footer  >

      </footer>
    </div>
  )
}

// export async function getStaticProps() {
//   const res = await fetch(API_URL)
//   const posts: String = await res.json()

//   return {
//     props: {
//       posts,
//     },
//   }
// }